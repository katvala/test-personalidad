#!/usr/bin/env python3
"""
Script de verificaci√≥n para deployment
"""
import os
import sys

def check_deployment():
    """Verifica que todos los archivos necesarios est√©n presentes"""
    print("üîç Verificando archivos para deployment...")
    
    required_files = [
        'app.py',
        'wsgi.py', 
        'requirements.txt',
        'Procfile',
        'runtime.txt',
        'utils.py',
        'templates/index.html',
        'templates/form.html',
        'templates/result.html',
        'templates/result_pdf.html'
    ]
    
    missing_files = []
    for file in required_files:
        if not os.path.exists(file):
            missing_files.append(file)
        else:
            print(f"‚úÖ {file}")
    
    if missing_files:
        print(f"\n‚ùå Archivos faltantes: {missing_files}")
        return False
    
    print("\nüì¶ Verificando dependencias...")
    try:
        import flask
        print(f"‚úÖ Flask {flask.__version__}")
    except ImportError:
        print("‚ùå Flask no encontrado")
        return False
    
    try:
        import weasyprint
        print(f"‚úÖ WeasyPrint disponible")
    except ImportError:
        print("‚ö†Ô∏è WeasyPrint no encontrado (se instalar√° en deployment)")
    
    try:
        import gunicorn
        print(f"‚úÖ Gunicorn disponible")
    except ImportError:
        print("‚ùå Gunicorn no encontrado")
        return False
    
    print("\nüîß Verificando configuraci√≥n...")
    
    # Check environment variables
    secret_key = os.getenv('FLASK_SECRET_KEY')
    if secret_key:
        print("‚úÖ FLASK_SECRET_KEY configurada")
    else:
        print("‚ö†Ô∏è FLASK_SECRET_KEY no configurada (usar en deployment)")
    
    print("\nüéØ URLs de deployment sugeridas:")
    print("- Render: https://render.com")
    print("- Railway: https://railway.app") 
    print("- Vercel: https://vercel.com")
    
    print("\n‚úÖ Listo para deployment!")
    return True

if __name__ == "__main__":
    success = check_deployment()
    sys.exit(0 if success else 1)
